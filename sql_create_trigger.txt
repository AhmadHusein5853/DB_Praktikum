
CREATE TABLE benutzer (
            bNummer INT GENERATED BY DEFAULT NOT NULL ,
            email VARCHAR(50) NOT NULL,
            bName VARCHAR (50) NOT NULL,
			PRIMARY KEY (bNummer)
            );

CREATE TABLE kurs (
             kId INT GENERATED BY DEFAULT  NOT NULL ,
             kName VARCHAR (50) NOT NULL ,
             bescgreibungsText TEXT NOT NULL ,
             freiePlatze INT NOT NULL ,
             einschreibSchlussel INT NOT NULL ,
             bNummer INT NOT NULL REFERENCES benutzer(bNummer) ,
             PRIMARY KEY (kid)
             );
             

CREATE TABLE abgaben (
             abgabeId   INT  GENERATED BY DEFAULT NOT NULL,
             abgabeText TEXT NOT NULL,
             note 	    DECIMAL(2,2) ,
             komentar   TEXT  , 
             bNummer INT NOT NULL REFERENCES benutzer(bNummer) ,
             PRIMARY KEY (abgabeId)
             );
CREATE TABLE aufgaben (
             aNummer  INT NOT NULL ,
             aName   VARCHAR(50) NOT NULL,
             beschreibung TEXT NOT NULL ,
             kId          INT NOT  NULL REFERENCES kurs(kId) ,
             PRIMARY KEY (kId,aNummer)
             );

CREATE TABLE einreichen (
             aNummer INT NOT NULL REFERENCES aufgaben(aNummer),
			 kId INT NOT NULL REFERENCES aufgaben(kId),
             bNummer INT NOT NULL REFERENCES benutzer(bNummer) , 
             abgabeId INT NOT NULL REFERENCES abgaben(abgabeId),
             PRIMARY KEY (aNummer,kId,abgabeId)
             );
			 
CREATE TABLE einschreiben (
			kId INT NOT NULL REFERENCES kurs(kId),
			bNummer INT NOT NULL REFERENCES benutzer(bNummer),
            eintrittsDatum 	DATE NOT NULL ,
			PRIMARY KEY (kId,bnummer)
            );


CREATE TRIGGER statusupdate
AFTER INSERT ON kurs 
REFERENCING NEW AS neu
FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
      INSERT INTO einschreiben VALUES (neu.kId,neu.bNummer,sysdatetime()); 
END


            

    

			
            